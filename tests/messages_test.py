import unittest
import numpy as np
from messages import Messages
from site_types import Ring_Site_Types
from code import Code

"""
For testing this class I compare its output to cmcpy's output. Code to produce cmcpy's output is below.

import cmcpy
codons = cmcpy.codon_spaces.RingCodonSpace(num_codons = 8, mu = 0.02)
aas = cmcpy.amino_acid_spaces.RingAminoAcidSpace(coords = [0.05,0.15,0.24,0.41,0.44,0.51,0.54,0.79,0.83,0.92])
cmc_site_types = cmcpy.site_type_spaces.MirroringSiteTypeSpace(amino_acids = aas, phi = 0.25)
initial_code = cmcpy.genetic_codes.InitiallyAmbiguousGeneticCode(codons = codons,amino_acids = aas)
cmc_evolver = cmcpy.evolvers.ArdellSellaEvolverNumpy(initial_code = initial_code, site_types = cmc_site_types,
                                                     num_processes = 4,  delta = 1e-16, epsilon = 1e-16,
                                                     observables = cmcpy.observables.Observables())

correct_mutation_selection_matrices = np.array([cmc_evolver.get_mutation_selection_matrix(i) for i in xrange(10)])

# This is called to bypass the code.is_ambiguous() check in initial_equilibrate_messages
# TODO Figure out why that check is done
cmc_evolver.equilibrate_messages() 

correct_equilibrium_codon_usage = cmc_evolver.eigenmatrix
correct_equilibrium_fitness_contributions = cmc_evolver.eigenvalues
correct_nonequilibrium_fitness = cmc_evolver.compute_code_fitness_given_messages(nonequilibrium_codon_usage,
                                                                                  np.ones((8,10)) / 10)

"""
correct_mutation_selection_matrices = np.array([[[ 0.68481941,  0.01426707,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01426707],
                                                 [ 0.01426707,  0.68481941,  0.01426707,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01426707,  0.68481941,  0.01426707,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01426707,  0.68481941,  0.01426707,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01426707,  0.68481941,
                                                   0.01426707,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01426707,
                                                   0.68481941,  0.01426707,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01426707,  0.68481941,  0.01426707],
                                                 [ 0.01426707,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01426707,  0.68481941]],
                                                [[ 0.69934561,  0.0145697 ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.0145697 ],
                                                 [ 0.0145697 ,  0.69934561,  0.0145697 ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.0145697 ,  0.69934561,  0.0145697 ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.0145697 ,  0.69934561,  0.0145697 ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.0145697 ,  0.69934561,
                                                   0.0145697 ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.0145697 ,
                                                   0.69934561,  0.0145697 ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.0145697 ,  0.69934561,  0.0145697 ],
                                                 [ 0.0145697 ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.0145697 ,  0.69934561]],
                                                [[ 0.69989824,  0.01458121,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01458121],
                                                 [ 0.01458121,  0.69989824,  0.01458121,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01458121,  0.69989824,  0.01458121,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01458121,  0.69989824,  0.01458121,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01458121,  0.69989824,
                                                   0.01458121,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01458121,
                                                   0.69989824,  0.01458121,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01458121,  0.69989824,  0.01458121],
                                                 [ 0.01458121,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01458121,  0.69989824]],
                                                [[ 0.71189115,  0.01483107,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01483107],
                                                 [ 0.01483107,  0.71189115,  0.01483107,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01483107,  0.71189115,  0.01483107,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01483107,  0.71189115,  0.01483107,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01483107,  0.71189115,
                                                   0.01483107,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01483107,
                                                   0.71189115,  0.01483107,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01483107,  0.71189115,  0.01483107],
                                                 [ 0.01483107,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01483107,  0.71189115]],
                                                [[ 0.71601779,  0.01491704,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01491704],
                                                 [ 0.01491704,  0.71601779,  0.01491704,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01491704,  0.71601779,  0.01491704,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01491704,  0.71601779,  0.01491704,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01491704,  0.71601779,
                                                   0.01491704,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01491704,
                                                   0.71601779,  0.01491704,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01491704,  0.71601779,  0.01491704],
                                                 [ 0.01491704,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01491704,  0.71601779]],
                                                [[ 0.71492815,  0.01489434,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01489434],
                                                 [ 0.01489434,  0.71492815,  0.01489434,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01489434,  0.71492815,  0.01489434,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01489434,  0.71492815,  0.01489434,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01489434,  0.71492815,
                                                   0.01489434,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01489434,
                                                   0.71492815,  0.01489434,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01489434,  0.71492815,  0.01489434],
                                                 [ 0.01489434,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01489434,  0.71492815]],
                                                [[ 0.70853472,  0.01476114,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01476114],
                                                 [ 0.01476114,  0.70853472,  0.01476114,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01476114,  0.70853472,  0.01476114,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01476114,  0.70853472,  0.01476114,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01476114,  0.70853472,
                                                   0.01476114,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01476114,
                                                   0.70853472,  0.01476114,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01476114,  0.70853472,  0.01476114],
                                                 [ 0.01476114,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01476114,  0.70853472]],
                                                [[ 0.69244599,  0.01442596,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01442596],
                                                 [ 0.01442596,  0.69244599,  0.01442596,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01442596,  0.69244599,  0.01442596,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01442596,  0.69244599,  0.01442596,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01442596,  0.69244599,
                                                   0.01442596,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01442596,
                                                   0.69244599,  0.01442596,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01442596,  0.69244599,  0.01442596],
                                                 [ 0.01442596,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01442596,  0.69244599]],
                                                [[ 0.69367077,  0.01445147,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01445147],
                                                 [ 0.01445147,  0.69367077,  0.01445147,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01445147,  0.69367077,  0.01445147,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01445147,  0.69367077,  0.01445147,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01445147,  0.69367077,
                                                   0.01445147,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01445147,
                                                   0.69367077,  0.01445147,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01445147,  0.69367077,  0.01445147],
                                                 [ 0.01445147,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01445147,  0.69367077]],
                                                [[ 0.68155709,  0.01419911,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.01419911],
                                                 [ 0.01419911,  0.68155709,  0.01419911,  0.        ,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.01419911,  0.68155709,  0.01419911,  0.        ,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.01419911,  0.68155709,  0.01419911,
                                                   0.        ,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.01419911,  0.68155709,
                                                   0.01419911,  0.        ,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.01419911,
                                                   0.68155709,  0.01419911,  0.        ],
                                                 [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.01419911,  0.68155709,  0.01419911],
                                                 [ 0.01419911,  0.        ,  0.        ,  0.        ,  0.        ,
                                                   0.        ,  0.01419911,  0.68155709]]])

correct_equilibrium_codon_usage = np.array([[ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                            [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125]])

correct_equilibrium_fitness_contributions = np.array([[ 0.71335355],
                                                      [ 0.72848501],
                                                      [ 0.72906067],
                                                      [ 0.74155328],
                                                      [ 0.74585186],
                                                      [ 0.74471683],
                                                      [ 0.738057  ],
                                                      [ 0.72129791],
                                                      [ 0.72257372],
                                                      [ 0.7099553 ]])


nonequilibrium_codon_usage = np.array([[ 0.000,  0.000,  0.375,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.130,  0.120,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.100,  0.125,  0.125,  0.150,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.150,  0.120,  0.105,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125],
                                       [ 0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125,  0.125]])

correct_nonequilibrium_fitness = 0.042617989729540708

class Messages_Test(unittest.TestCase):
    def setUp(self):
        self.mutation_matrix = np.array([[ 0.96,  0.02,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.02],
                                         [ 0.02,  0.96,  0.02,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ],
                                         [ 0.  ,  0.02,  0.96,  0.02,  0.  ,  0.  ,  0.  ,  0.  ],
                                         [ 0.  ,  0.  ,  0.02,  0.96,  0.02,  0.  ,  0.  ,  0.  ],
                                         [ 0.  ,  0.  ,  0.  ,  0.02,  0.96,  0.02,  0.  ,  0.  ],
                                         [ 0.  ,  0.  ,  0.  ,  0.  ,  0.02,  0.96,  0.02,  0.  ],
                                         [ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.02,  0.96,  0.02],
                                         [ 0.02,  0.  ,  0.  ,  0.  ,  0.  ,  0.  ,  0.02,  0.96]])

        pchem_vals = [0.05,0.15,0.24,0.41,0.44,0.51,0.54,0.79,0.83,0.92]
        site_ids = range(10)
        aa_ids = range(10)
        self.site_types = Ring_Site_Types(.25, zip(aa_ids, pchem_vals), zip(site_ids, pchem_vals), [1] * 10)
        
        self.code_matrix = np.ones((8,10)) / 10

        self.fitness_contributions = None
        self.message = Messages(self.code_matrix, self.site_types.fitness_matrix, self.mutation_matrix)

    def test_mutation_selection_matrix(self):
        mutation_selection_matrices = [self.message._mutation_selection_matrix(i) for i in xrange(10)]

        for i in xrange(10):
            self.assertTrue(np.allclose(mutation_selection_matrices[i],
                                        correct_mutation_selection_matrices[i]),
                            msg="Mutation Selection matrix did not match for site index {}.".format(i))
    
    def test_equilibrium_codon_usage(self):
        self.assertTrue(np.allclose(self.message.codon_usage, # Should default to calculating codon usage
                                    correct_equilibrium_codon_usage)) # at equilibrium

    def test_equilibrium_fitness_contributions(self):
        self.assertTrue(np.allclose(self.message.fitness_contributions, # Should also default to at equilibrium 
                                    correct_equilibrium_fitness_contributions))

    def test_nonequilibrium_fitness_contributions(self):
        self.message.calculate_at_codon_usage(nonequilibrium_codon_usage)
        fitness_contributions = self.message.fitness_contributions

        self.assertAlmostEqual(correct_nonequilibrium_fitness, np.prod(fitness_contributions))

if __name__ == '__main__':
    unittest.main()
